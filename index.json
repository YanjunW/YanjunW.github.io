[{"authors":null,"categories":null,"content":"Hi, I am a Ph.D. student in the School of Electrical and Computer Engineering at Purdue University under the supervision of Prof.Xiaokang Qiu. My research interests include program verification and program synthesis. Before starting my studies at Purdue, I received my B.Eng. in Electrical Engineering at Huazhong University of Science and Technology, China.\n","date":1550132102,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1550132102,"objectID":"598b63dd58b43bce02403646f240cd3c","permalink":"https://YanjunW.github.io/author/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/admin/","section":"author","summary":"Hi, I am a Ph.D. student in the School of Electrical and Computer Engineering at Purdue University under the supervision of Prof.Xiaokang Qiu. My research interests include program verification and program synthesis. Before starting my studies at Purdue, I received my B.Eng. in Electrical Engineering at Huazhong University of Science and Technology, China.","tags":null,"title":"","type":"author"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"d41d8cd98f00b204e9800998ecf8427e","permalink":"https://YanjunW.github.io/author/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/","section":"author","summary":"","tags":null,"title":"Authors","type":"author"},{"authors":null,"categories":null,"content":"Dryad_dec is a decidable logic that allows reasoning about tree data-structures with measurements. This logic supports user-defined recursive measure functions based on Max or Sum, and recursive predicates based on these measure functions, such as AVL trees or red-black trees. We prove that the logicâ€™s satisfiability is decidable. The crux of the decidability proof is a small model property which allows us to reduce the satisfiability of Dryad_dec to quantifier-free linear arithmetic theory which can be solved efficiently using SMT solvers. We also show that Dryad_dec can encode a variety of verification and synthesis problems, including natural proof verification conditions for functional correctness of recursive tree-manipulating programs, legality conditions for fusing tree traversals, synthesis conditions for conditional linear-integer arithmetic functions. We developed the decision procedure and successfully solved 220+ Dryad_dec formulae raised from these application scenarios, including verifying functional correctness of programs manipulating AVL trees, red-black trees and treaps, checking the fusibility of height-based mutually recursive tree traversals, and counterexample-guided synthesis from linear integer arithmetic specifications. To our knowledge, Dryad_dec is the first decidable logic that can solve such a wide variety of problems requiring flexible combination of measure-related, data-related and shape-related properties for trees.\nPlease check the pdf link above to see details in the preprint paper (with appendix).\n","date":1550123097,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1550195037,"objectID":"c0a348d6b23a7de25c435f00669bc539","permalink":"https://YanjunW.github.io/project/decidable-dryad/","publishdate":"2019-02-14T00:44:57-05:00","relpermalink":"/project/decidable-dryad/","section":"project","summary":"A **decidable** logic for tree data-structures with measurements.","tags":[],"title":"Dryad_dec","type":"project"},{"authors":["Xiaokang Qiu","**Yanjun Wang**"],"categories":null,"content":"","date":1550122332,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1550132102,"objectID":"c68e42e6ff804c54da511b86cb25ffd8","permalink":"https://YanjunW.github.io/publication/reasoning-about-recursive-tree-traversals/","publishdate":"2019-02-14T00:32:12-05:00","relpermalink":"/publication/reasoning-about-recursive-tree-traversals/","section":"publication","summary":"","tags":[],"title":"Reasoning About Recursive Tree Traversals","type":"publication"},{"authors":null,"categories":null,"content":"","date":1550121983,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1550195037,"objectID":"4817682335134b0c65aa6b41de7a208c","permalink":"https://YanjunW.github.io/project/dryadsynth/","publishdate":"2019-02-14T00:26:23-05:00","relpermalink":"/project/dryadsynth/","section":"project","summary":"A [Syntax-Guided Synthesis (SyGuS)](http://sygus.org/language.html) solver that combines explicit search and symbolic search.","tags":[],"title":"DryadSynth","type":"project"},{"authors":["Kangjing Huang","Xiaokang Qiu","Peiyuan Shen","**Yanjun Wang**"],"categories":null,"content":"","date":1550036807,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1550132102,"objectID":"6ff021434e57d3183a65b741f77a0231","permalink":"https://YanjunW.github.io/publication/gradual-synthesis/","publishdate":"2019-02-13T00:46:47-05:00","relpermalink":"/publication/gradual-synthesis/","section":"publication","summary":"Syntax-guided synthesis aims to find a program satisfying semantic specification as well as user-provided structural hypotheses. There are two main search strategies: concrete search, which systematically or stochastically enumerates all possible solutions, and symbolic search, which leverages a symbolic procedure to solve the synthesis problem. In this paper, we propose a gradual synthesis framework, a novel combination of the two strategies that combines the best of the two worlds. The framework is a synergy of three key ideas: height-based enumeration (solving the synthesis problem at every height symbolically); grammar extension (sim- plifying the synthesis problem using the failed candidate); and pure symbolic synthesis (ad hoc, decidable synthesis procedures for special classes of problems). We prototyped the gradual synthesis framework and evaluated it on a wide range of benchmarks. Experiments show that the new synthesis framework can solve many challenging synthesis problems not possible before.","tags":[],"title":"Syntax-Guided Gradual Synthesis","type":"publication"},{"authors":["Xiaokang Qiu","**Yanjun Wang**"],"categories":null,"content":"","date":1546318800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1550132102,"objectID":"a2051b0382e44eec62ec4adec1f98d6f","permalink":"https://YanjunW.github.io/publication/decidable-dryad/","publishdate":"2019-01-01T00:00:00-05:00","relpermalink":"/publication/decidable-dryad/","section":"publication","summary":"We present Dryad_dec, a decidable logic that allows reasoning about tree data-structures with measurements. This logic supports user-defined recursive measure functions based on Max or Sum, and recursive predicates based on these measure functions, such as AVL trees or red-black trees. We prove that the logic's satisfiability is decidable. The crux of the decidability proof is a small model property which allows us to reduce the satisfiability of Dryad_dec to quantifier-free linear arithmetic theory which can be solved efficiently using SMT solvers. We also show that Dryad_dec can encode a variety of verification and synthesis problems, including natural proof verification conditions for functional correctness of recursive tree-manipulating programs, legality conditions for fusing tree traversals, synthesis conditions for conditional linear-integer arithmetic functions. We developed the decision procedure and successfully solved 220+ Dryad_dec formulae raised from these application scenarios, including verifying functional correctness of programs manipulating AVL trees, red-black trees and treaps, checking the fusibility of height-based mutually recursive tree traversals, and counterexample-guided synthesis from linear integer arithmetic specifications. To our knowledge, Dryad_dec is the first decidable logic that can solve such a wide variety of problems requiring flexible combination of measure-related, data-related and shape-related properties for trees.","tags":null,"title":"A Decidable Logic for Tree Data-Structures with Measurements","type":"publication"}]