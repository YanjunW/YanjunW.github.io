<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Yanjun Wang on Yanjun Wang</title>
    <link>https://YanjunW.github.io/</link>
    <description>Recent content in Yanjun Wang on Yanjun Wang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 14 Feb 2019 00:44:57 -0500</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Dryad_dec</title>
      <link>https://YanjunW.github.io/project/decidable-dryad/</link>
      <pubDate>Thu, 14 Feb 2019 00:44:57 -0500</pubDate>
      
      <guid>https://YanjunW.github.io/project/decidable-dryad/</guid>
      <description>&lt;p&gt;Dryad_dec is a decidable logic that allows reasoning about tree data-structures with measurements. This logic supports user-defined recursive measure functions based on Max or Sum, and recursive predicates based on these measure functions, such as AVL trees or red-black trees. We prove that the logicâ€™s satisfiability is decidable. The crux of the decidability proof is a small model property which allows us to reduce the satisfiability of Dryad_dec to quantifier-free linear arithmetic theory which can be solved efficiently using SMT solvers. We also show that Dryad_dec can encode a variety of verification and synthesis problems, including natural proof verification conditions for functional correctness of recursive tree-manipulating programs, legality conditions for fusing tree traversals, synthesis conditions for conditional linear-integer arithmetic functions. We developed the decision procedure and successfully solved 220+ Dryad_dec formulae raised from these application scenarios, including verifying functional correctness of programs manipulating AVL trees, red-black trees and treaps, checking the fusibility of height-based mutually recursive tree traversals, and counterexample-guided synthesis from linear integer arithmetic specifications. To our knowledge, Dryad_dec is the first decidable logic that can solve such a wide variety of problems requiring flexible combination of measure-related, data-related and shape-related properties for trees.&lt;/p&gt;

&lt;p&gt;Please check the &lt;em&gt;preprint&lt;/em&gt; link above to see details in the preprint paper &lt;strong&gt;(with appendix)&lt;/strong&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Reasoning About Recursive Tree Traversals</title>
      <link>https://YanjunW.github.io/publication/reasoning-about-recursive-tree-traversals/</link>
      <pubDate>Thu, 14 Feb 2019 00:32:12 -0500</pubDate>
      
      <guid>https://YanjunW.github.io/publication/reasoning-about-recursive-tree-traversals/</guid>
      <description></description>
    </item>
    
    <item>
      <title>DryadSynth</title>
      <link>https://YanjunW.github.io/project/dryadsynth/</link>
      <pubDate>Thu, 14 Feb 2019 00:26:23 -0500</pubDate>
      
      <guid>https://YanjunW.github.io/project/dryadsynth/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Syntax-Guided Gradual Synthesis</title>
      <link>https://YanjunW.github.io/publication/gradual-synthesis/</link>
      <pubDate>Wed, 13 Feb 2019 00:46:47 -0500</pubDate>
      
      <guid>https://YanjunW.github.io/publication/gradual-synthesis/</guid>
      <description></description>
    </item>
    
    <item>
      <title>A Decidable Logic for Tree Data-Structures with Measurements</title>
      <link>https://YanjunW.github.io/publication/decidable-dryad/</link>
      <pubDate>Tue, 01 Jan 2019 00:00:00 -0500</pubDate>
      
      <guid>https://YanjunW.github.io/publication/decidable-dryad/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
